/* GLOBAL */

body {
    font-family: 'Roboto', sans-serif;
    font-size: 1rem;
    line-height: 1.5;
    color: #dad8cd;
    background-color: #0c171f;
    padding: 16px;
}

a {
    color: #fcdd2d;
    font-weight: bold;
    background-color: transparent;
    text-decoration: underline 0.1em rgba(255, 255, 255, 0);
    transition: color 0.15s ease-in-out, text-decoration-color 0.15s;
}

a:hover {
    text-decoration-color: rgba(255, 255, 255, 0.7);
    color: #fff;
}

h2 {
    font-size: 1.5rem;
    font-weight: bold;
    margin-top: 2rem;
    margin-bottom: 1rem;
}

li {
    margin-bottom: 8px;
}

code {
    display: inline-block;
    background: #1a2933;
    padding: 0.2em 0.4em;
    border-radius: 6px;
    font-size: 85%;
    font-family: monospace;
    white-space: pre;
    margin: 2px;
}

code.token-comment {
    background: transparent;
    color: #bbb;
}

code.token-whitespace {
    background: transparent;
    margin-left: 0;
    margin-right: 0;
    padding: 0;
}

code.token-string {
    color: #99da97;
    margin-left: 1px;
    margin-right: 1px;
    padding: 0.2em 0.2em;
}

code.token-number {
    color: #97bcda;
}

code.token-symbol {
    color: #d18b8b;
}

header {
    font-size: 20px;
}

header .header-text {
    font-weight: bold;
    float: left;
    margin-right: 16px;
}

header .header-logo {
    margin-right: 8px;
    margin-bottom: -2px;
}

header a {
    margin-left: 16px;
    margin-right: 16px;
}

header .github-star-button {
    float: right;
}

.profile-image {
    margin-right: 10px;
    height: 24px;
    width: 24px;
    line-height: 24px;
    font-size: 12px;
    vertical-align: middle;
    border-radius: 50%;
    background: #c0b375;
    display: inline-block;
    text-align: center;
    color: #0c171f;
    font-family: monospace;
    border: 1px solid #b8bec2;
}

.profile-image.big {
    margin-right: 16px;
    height: 42px;
    width: 42px;
    line-height: 42px;
    font-size: 21px;
}

/* LEADERBOARD */

.leaderboard {
    max-width: 800px;
    width: 100%;
    border-collapse: collapse;
}

.leaderboard tr {
    border-bottom: 1px solid #eeeeee21;
    padding: 12px;
    font-size: 15px;
    line-height: 2.5;
}

.leaderboard .rank {
    padding-left: 24px;
    font-weight: bold;
}

.leaderboard .username {
    max-width: 50vw;
    overflow-wrap: anywhere;
}

.leaderboard .left-align {
    text-align: left;
}

.leaderboard .right-align {
    text-align: right;
}

/* LEFT-RIGHT LAYOUT */

.left-right-layout {
    display: flex;
    justify-content: space-between;
    column-gap: 64px;
}

.left-right-layout .left {
    width: 50%;
}

.left-right-layout .right {
    width: 50%;
}

/* mobile: stack left and right */
@media (max-width: 1000px) {
    .left-right-layout {
        flex-direction: column;
    }

    .left-right-layout .left {
        width: 100%;
    }

    .left-right-layout .right {
        width: 100%;
    }
}

/* FORM */

/* Customize the label (the container) */
.checkbox-container {
    display: block;
    position: relative;
    padding-left: 35px;
    margin-top: 8px;
    margin-bottom: 8px;
    cursor: pointer;
    font-size: 18px;
    user-select: none;
}

/* Hide the browser's default checkbox */
.checkbox-container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

/* Create a custom checkbox */
.checkbox-container .checkbox {
    position: absolute;
    top: 0;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: #b8bec2;
    border-radius: 2px;
}

/* On mouse-over, add a grey background color */
.checkbox-container:hover input ~ .checkbox {
    background-color: #c0b375 !important;
}

.checkbox-container:active input ~ .checkbox {
    background-color: #a2976a;
!important;
}

/* When the checkbox is checked, add a yellow background */
.checkbox-container input:checked ~ .checkbox {
    background-color: #fcdd2d;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkbox-container .checkbox:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.checkbox-container input:checked ~ .checkbox:after {
    display: block;
}

/* Style the checkmark/indicator */
.checkbox-container .checkbox:after {
    left: 9px;
    top: 5px;
    width: 5px;
    height: 10px;
    border: solid #0b171f;
    border-width: 0 3px 3px 0;
    transform: rotate(45deg);
}

button, input[type=submit] {
    background-color: #fcdd2d;
    border: none;
    padding: 12px 24px;
    margin-top: 8px;
    margin-bottom: 8px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    color: #0b171f;
    font-weight: bold;
    cursor: pointer;
    border-radius: 2px;
}

button:hover, input[type=submit]:hover {
    background-color: #c0b375;
}

button:active, input[type=submit]:active {
    background-color: #a2976a;
    color: #000000;
}

button:disabled, input[type=submit]:disabled {
    background-color: #c9c9b4;
    color: #434343;
    cursor: not-allowed;
}

input[type=text] {
    line-height: 200%;
    background-color: #fcdd2d;
    border: none;
    margin: 2px;
    padding: 2px 6px;
    border-radius: 2px;
}

select {
    background-color: #fcdd2d;
    margin-top: 8px;
    margin-bottom: 8px;
    font-size: 16px;
    padding: 8px;
    font-weight: bold;
    border: none;
    border-radius: 2px;
}

textarea {
    margin-top: 8px;
    margin-bottom: 8px;
    max-width: calc(100% - 4px);
    border: none;
    border-radius: 2px;
}

.text-secondary-info {
    color: #888;
}

.text-big {
    font-size: 120%;
}

/* Error-Dialog */

dialog {
    background-color: #10161b;
    color: #dad8cd;
    border-radius: 8px;
    border: none;
    box-shadow: 0 0 64px 10px #111, 0 0 10px #080808;
}

dialog .header {
    font-size: 28px;
    font-weight: bold;
    margin-bottom: 16px;
}

dialog .footer {
    float: right;
}

dialog .footer button {
    margin-top: 16px;
    margin-bottom: 0;
}

/*   Open state of the dialog  */
dialog[open] {
    opacity: 1;
}

/*   Closed state of the dialog   */
dialog {
    opacity: 0;
    transition: all 0.15s allow-discrete;
}

/*   Before-open state  */
/* Needs to be after the previous dialog[open] rule to take effect, as the specificity is the same */
@starting-style {
    dialog[open] {
        opacity: 0;
    }
}

/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
    background-color: rgb(0 0 0 / 0);
    transition: all 0.15s allow-discrete;
}

dialog[open]::backdrop {
    background-color: rgb(33 33 33 / 0.75);
}

/* This starting-style rule cannot be nested inside the above selector
because the nesting selector cannot represent pseudo-elements. */
@starting-style {
    dialog[open]::backdrop {
        background-color: rgb(0 0 0 / 0);
    }
}